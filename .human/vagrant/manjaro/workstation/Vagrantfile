# -*- mode: ruby -*-
# vi: set ft=ruby :

# All Vagrant configuration is done below. The "2" in Vagrant.configure
# configures the configuration version (we support older styles for
# backwards compatibility). Please don't change it unless you know what
# you're doing.
Vagrant.configure("2") do |config|
  # The most common configuration options are documented and commented below.
  # For a complete reference, please see the online documentation at
  # https://docs.vagrantup.com.

  config.vm.box = "stefandunca/manjaro-gnome-20-vagrant"
  #config.vm.box_check_update = false

  compatibility_mode = "2.0"

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine. In the example below,
  # accessing "localhost:8080" will access port 80 on the guest machine.
  # NOTE: This will enable public access to the opened port
  # config.vm.network "forwarded_port", guest: 80, host: 8080

  # Create a forwarded port mapping which allows access to a specific port
  # within the machine from a port on the host machine and only allow access
  # via 127.0.0.1 to disable public access
  # config.vm.network "forwarded_port", guest: 80, host: 8080, host_ip: "127.0.0.1"

  # Create a private network, which allows host-only access to the machine
  # using a specific IP.
  # config.vm.network "private_network", ip: "192.168.33.10"

  # Create a public network, which generally matched to bridged network.
  # Bridged networks make the machine appear as another physical device on
  # your network.
  # config.vm.network "public_network"

  # Share an additional folder to the guest VM. The first argument is
  # the path on the host to the actual folder. The second argument is
  # the path on the guest to mount the folder. And the optional third
  # argument is a set of non-required options.
  config.vm.synced_folder "~/.human/", "/project_data/.human/", type: "rsync"
  config.vm.synced_folder ".", "/vagrant", type: "rsync"

  if Vagrant.has_plugin?("vagrant-vbguest")
    config.vbguest.auto_update = false
  end

  # VirtualBox specific configuration
  config.vm.provider "virtualbox" do |vb|
    # Display the VirtualBox GUI when booting the machine
    vb.gui = true

    # Customize the HW
    vb.memory = "2048"
    vb.cpus = 2
    vb.name = "Manjaro Workstation Ansible Test"
  end

  config.vm.provision "shell", inline: <<-SHELL
    sudo pacman -Suy --noconfirm
    sudo pacman -S --needed --noconfirm ansible git
    /project_data/.human/setup/setup_home.sh
  SHELL

  config.vm.provision :ansible_local do |ansible|
    ansible.verbose = "v"
    ansible.playbook = "/project_data/.human/ansible/manjaro/workstation.local.yml"
    ansible.raw_arguments = ["-e 'ansible_python_interpreter=/usr/bin/python3'", "--connection=local", "--inventory 127.0.0.1, --limit 127.0.0.1", '--extra-vars "run_as_user=$USER"']
  end

  config.vm.provision "shell", privileged: false, inline: <<-SHELL
    echo "Running tests!!!"
    cd /project_data/.human/ansible/manjaro/tests/ && /project_data/.human/ansible/manjaro/tests/workstation.sh && echo "Tests were SUCCESSFUL"
  SHELL
end

