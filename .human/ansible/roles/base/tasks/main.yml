---
- name: Process pacman packages
  include: pacman.yml
  when: ansible_distribution == 'Archlinux'

- name: Process AUR packages
  include: aur.yml
  when: ansible_distribution == 'Archlinux'

- name: Process AUR packages
  include: apt.yml
  when: ansible_distribution == 'Ubuntu'

#
# Todo tests, ansible seems not to be the best choice
#

# - name: Create output directory 
#   file:
#     path: "{{ output_dir }}"
#     state: directory
#   become_user: '{{ run_as_user }}'
#   tags: [test, setup]

# - name: Read prev setup results
#   shell: cat {{ output_dir }}/base_setup_result.txt
#   register: prev_setup_result
#   become_user: "{{run_as_user}}"
#   changed_when: false
#   ignore_errors: yes
#   tags: test
# - name: Setup scripts
#   script: /home/{{ run_as_user }}/.human/setup/setup_home.sh 2>&1 | tee {{ output_dir }}/base_setup_result.txt
#   become_user: "{{run_as_user}}"
#   register: setup_result
#   changed_when: (prev_setup_result.stdout is undefined or setup_result.stdout is undefined) or setup_result.stdout != prev_setup_result.stdout
#   tags: setup

# - name: Check if tools folder exists
#   stat:
#     path: /home/{{ run_as_user }}/tools
#   register: is_tools_available
# - name: Creates tools directory
#   file:
#     path: /home/{{ run_as_user }}/tools
#     state: directory
#   become_user: '{{ run_as_user }}'
#   when: is_tools_available.stat.exists is defined and is_tools_available.stat.exists != true

# - name: Read prev test results
#   shell: cat {{ output_dir }}/base_test_result.txt
#   register: prev_test_result
#   become_user: "{{run_as_user}}"
#   changed_when: false
#   ignore_errors: yes
#   tags: test
# - name: Test commands
#   script: test_commands.sh 2>&1 | tee {{ output_dir }}/base_test_result.txt
#   become_user: "{{run_as_user}}"
#   register: test_result
#   changed_when: "(prev_test_result.stdout is undefined or test_result.stdout is undefined) or prev_test_result.stdout != test_result.stdout"
#   tags: test
# - name: Debug prev
#   debug:
#     msg: "{{ prev_test_result.stdout }}"
#   tags: test
# - name: Debug new
#   debug:
#     msg: "{{ test_result.stdout }}"
#   tags: test